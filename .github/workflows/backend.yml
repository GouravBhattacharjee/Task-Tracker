name: Deploy Backend to ECS

on:
  push:
    branches:
      - main
    paths:
      - "backend/**"
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 3. Log in to ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # 4. Build and push image to ECR (no cache)
      - name: Build, tag, and push image to ECR
        env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build --no-cache -t $ECR_REPOSITORY:$IMAGE_TAG ./backend
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

      # 5. Register new task definition revision
      - name: Register new task definition revision
        id: register-task
        run: |
          # Get current task definition JSON (extract only taskDefinition)
          TASK_DEF=$(aws ecs describe-task-definition \
            --task-definition ${{ secrets.ECS_TASK_FAMILY }} \
            --query 'taskDefinition' \
            --output json)

          # Create new revision with updated image
          NEW_TASK_DEF=$(echo $TASK_DEF | jq --arg IMAGE "${{ env.image }}" '
          {
            family: .family,
            networkMode: .networkMode,
            containerDefinitions: (.containerDefinitions | map(.image = $IMAGE)),
            requiresCompatibilities: .requiresCompatibilities,
            cpu: .cpu,
            memory: .memory
          }
          + (if .taskRoleArn != null then { taskRoleArn: .taskRoleArn } else {} end)
          + (if .executionRoleArn != null then { executionRoleArn: .executionRoleArn } else {} end)
          ')

          echo "$NEW_TASK_DEF" > new-task-def.json

          # Register new revision and capture new task definition ARN
          NEW_REVISION=$(aws ecs register-task-definition \
            --cli-input-json file://new-task-def.json \
            --query 'taskDefinition.taskDefinitionArn' \
            --output text)

          echo "NEW_REVISION=$NEW_REVISION" >> $GITHUB_ENV

      # 6. Update ECS service to use new revision
      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER_NAME }} \
            --service ${{ secrets.ECS_SERVICE_NAME }} \
            --task-definition $NEW_REVISION \
            --force-new-deployment
